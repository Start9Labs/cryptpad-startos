id: cryptpad
title: "CryptPad"
version: 5.0.0
release-notes: "Initial release of CryptPad for Embassy OS"
license: AGPL
wrapper-repo: "https://github.com/chrisguida/cryptpad-wrapper"
upstream-repo: "https://github.com/xwiki-labs/cryptpad"
support-site: "https://docs.cryptpad.fr/en/"
marketing-site: "https://cryptpad.org/"
build: ["make"]
description:
  short: Collaboration suite, end-to-end encrypted and open-source. 
  long: |
    CryptPad is a collaboration suite that is end-to-end-encrypted and open-source. It is built to enable collaboration, synchronizing changes to documents in real time. Because all data is encrypted, the service and its administrators have no way of seeing the content being edited and stored.
assets:
  license: LICENSE
  icon: icon.png
  instructions: instructions.md
  docker-images: image.tar
main:
  type: docker
  image: main
  entrypoint: docker_entrypoint.sh
  args: []
  mounts:
    main: /cryptpad/main
    blob: /cryptpad/blob
    block: /cryptpad/block
    customize: /cryptpad/customize
    data: /cryptpad/data
    datastore: /cryptpad/datastore
health-checks:
  # version:
  #   name: Database
  #   success-message: Backend is reachable and responsive.
  #   type: docker
  #   image: main
  #   entrypoint: health-check.sh
  #   args: ["api"]
  #   io-format: json
  #   inject: true
  web:
    name: Web Interface
    success-message: CryptPad is ready to be visited in your browser.
    type: docker
    image: main
    entrypoint: check-web.sh
    args: ["web"]
    io-format: json
    inject: true
config:
  get:
    type: script
  set:
    type: script
properties: ~
  # type: docker
  # image: compat
  # system: true
  # entrypoint: compat
  # args:
  #   - properties
  #   - /cryptpad
  # mounts:
  #   main: /cryptpad
  # io-format: yaml
dependencies: {}
volumes:
  main:
    type: data
  blob:
    type: data
  block:
    type: data
  customize:
    type: data
  data:
    type: data
  datastore:
    type: data
  compat:
    type: assets
interfaces:
  main:
    name: Web UI
    description: CryptPad Main UI, handles sensitive computation like processing of cryptographic keys.
    tor-config:
      port-mapping:
        80: "3000"
    lan-config:
      443:
        ssl: true
        internal: 3000
    ui: true
    protocols:
      - tcp
      - http
  sandbox:
    name: Sandbox UI
    description: Cryptpad Sandbox Interface, handles insensitive data and computation.
    tor-config:
      port-mapping:
        80: "3000"
    lan-config:
      443:
        ssl: true
        internal: 3000
    ui: true
    protocols:
      - tcp
      - http
  # main:
  #   name: Web UI
  #   description: CryptPad Main UI, handles sensitive computation like processing of cryptographic keys.
  #   tor-config:
  #     port-mapping:
  #       80: "80"
  #   lan-config:
  #     443:
  #       ssl: true
  #       internal: 80
  #   ui: true
  #   protocols:
  #     - tcp
  #     - http
  # sandbox:
  #   name: Sandbox UI
  #   description: Cryptpad Sandbox Interface, handles insensitive data and computation.
  #   tor-config:
  #     port-mapping:
  #       80: "80"
  #   lan-config:
  #     443:
  #       ssl: true
  #       internal: 80
  #   ui: true
  #   protocols:
  #     - tcp
  #     - http
  # sandbox:
  #   name: Cryptpad Sandbox Interface
  #   description: 
  #   tor-config:
  #     port-mapping:
  #       80: "3001"
  #   lan-config:
  #     443:
  #       ssl: true
  #       internal: 3001
  #   ui: true
  #   protocols:
  #     - tcp
  #     - http
alerts: {}
backup:
  create:
    type: docker
    image: compat
    system: true
    entrypoint: compat
    args:
      - duplicity
      - create
      - /mnt/backup
      - /cryptpad
    mounts:
      BACKUP: /mnt/backup
      main: /root/data
    io-format: yaml
  restore:
    type: docker
    image: compat
    system: true
    entrypoint: compat
    args:
      - duplicity
      - restore
      - /mnt/backup
      - /cryptpad
    mounts:
      BACKUP: /mnt/backup
      main: /root/data
    io-format: yaml
# actions:
#   reset-root-user:
#     name: Reset Root User
#     description: Resets your root user (the first user) to username "admin" and a random password; restores any lost admin privileges.
#     warning: This will invalidate existing sessions and password managers if you have them set up.
#     allowed-statuses:
#       - stopped
#     implementation:
#       type: docker
#       image: main
#       system: false
#       entrypoint: docker_entrypoint.sh
#       args: ["reset-root-user"]
#       mounts:
#         main: /root
#       io-format: json
